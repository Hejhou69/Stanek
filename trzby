<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>P≈ôehled tr≈æeb</title>
  <style>
    body { font-family: sans-serif; padding: 20px; max-width: 600px; margin: auto; }
    h1 { text-align: center; }
    table { width: 100%; border-collapse: collapse; margin-top: 20px; }
    table, th, td { border: 1px solid #ddd; }
    th, td { padding: 10px; text-align: center; }
    th { background-color: #f2f2f2; }
    button { padding: 10px 15px; font-size: 1em; }
    .controls { display: flex; justify-content: center; gap: 10px; margin-top: 20px; }
  </style>
</head>
<body>
  <h1>P≈ôehled tr≈æeb</h1>

  <table id="salesTable">
    <thead>
      <tr>
        <th>Datum</th>
        <th>Tr≈æba (Kƒç)</th>
        <th>Akce</th>
      </tr>
    </thead>
    <tbody>
      <!-- Tr≈æby se zde dynamicky naƒç√≠taj√≠ -->
    </tbody>
  </table>

  <div class="controls">
    <button onclick="resetAllSales()">üßπ Vymazat tr≈æby</button>
    <button onclick="exportCSV()">üìÑ Export do CSV</button>
    <a href="index.html">‚Ü©Ô∏è Zpƒõt na prodej</a>
  </div>

  <script>
    // Helper functions to handle localStorage
    function gs(key) {
      return localStorage.getItem('/Stanek_' + key);
    }

    function ss(key, value) {
      localStorage.setItem('/Stanek_' + key, value);
    }

    function loadSales() {
      const sales = gs('sales');
      return sales ? JSON.parse(sales) : {};
    }

    function renderSales() {
      const sales = loadSales();
      const tbody = document.getElementById('salesTable').getElementsByTagName('tbody')[0];
      tbody.innerHTML = '';

      for (let date in sales) {
        sales[date].forEach(sale => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${date}</td>
            <td>${sale} Kƒç</td>
            <td><button onclick="deleteSale('${date}', ${sale})">üóëÔ∏è Smazat</button></td>
          `;
          tbody.appendChild(row);
        });
      }
    }

    function resetAllSales() {
      if (confirm('Opravdu chcete vymazat v≈°echny tr≈æby?')) {
        ss('sales', JSON.stringify({}));
        renderSales();
      }
    }

    function deleteSale(date, sale) {
      const sales = loadSales();
      const updatedSales = sales[date].filter(s => s !== sale);
      if (updatedSales.length === 0) {
        delete sales[date];
      } else {
        sales[date] = updatedSales;
      }
      ss('sales', JSON.stringify(sales));
      renderSales();
    }

    function exportCSV() {
      const sales = loadSales();
      let csvContent = "Datum,Tr≈æba (Kƒç)\n";
      
      for (let date in sales) {
        sales[date].forEach(sale => {
          csvContent += `${date},${sale}\n`;
        });
      }
      
      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
      const link = document.createElement('a');
      link.href = URL.createObjectURL(blob);
      link.download = 'trzby.csv';
      link.click();
    }

    function saveSale(total) {
      const sales = loadSales();
      const today = new Date().toLocaleDateString('cs-CZ');
      if (!sales[today]) {
        sales[today] = [];
      }
      sales[today].push(total);
      ss('sales', JSON.stringify(sales));
      renderSales();
    }

    renderSales();
  </script>
</body>
</html>
